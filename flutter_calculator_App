import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}): super(key:key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home:  Calculator(title: 'calculator App '),
    );
  }
}
// Main structure
class Calculator extends StatefulWidget {
  final dynamic title;

  const Calculator({ Key? key, this.title}) :super(key: key);

  @override
  State<Calculator> createState() => _CalculatorState();
}
//set states and UI elements

class _CalculatorState extends State<Calculator> {
  // define controllers to store the input values

  final TextEditingController _controller1 = TextEditingController();
  // 2nd Controller

  final TextEditingController _controller2 = TextEditingController();

  // varaiable for store result
  double? result;

  // Method for perform operations
  void _calculate(String operation) {

    final num1 = double.tryParse(_controller1.text);
    final num2 = double.tryParse(_controller2.text);
    // Check inputs are valid
    if (num1 == null || num2 == null) {
      // show Alert when input are not valid
      _showAlert('Invalid Input ');
      return;
    }
// update the result when button pressed
    setState(() {
     // perform  operation
      switch (operation) {
        case'+':
          result = num1 + num2;
          break;
        case'-':
          result = num1 - num2;
          break;
        case'*':
          result = num1 * num2;
          break;
        case'/':
          // if input 2 is not valid show alert
          if (num2 == 0) {
            _showAlert('cannot divide by zero');
            result = null;
          }
          else {
            result = num1 / num2;
          }
            break;

      }
    });
  }
  // method for clear textfield
void _clearFields(){
    _controller1.clear();
    _controller2.clear();

    setState(() {
      result=null;
    });
}
// method for setAlert message
  void _showAlert(String s) {
    showDialog(
      context: context,
      builder: (context)=>AlertDialog(
        title: Text('Error'),
        content: Text(s),
        actions: [
          TextButton(
              onPressed:()=> Navigator.of(context).pop(),
              child: Text('ok'))
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // set the app bar
      appBar: AppBar(
        title: Text("Calculator App"),
        backgroundColor: Colors.green,),
      body: Padding(
          padding: const
          EdgeInsets.all(15.0),
          child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                // manage textfields
                TextField(
                  controller: _controller1,
                  decoration:
                  InputDecoration (
                      label: Text('Eneter first Number')),

                  keyboardType: TextInputType.number,),

                    // second textefield
                TextField(
                  controller: _controller2,
                  decoration:
                  InputDecoration(label: Text('Eneter Second Number')),
                  keyboardType: TextInputType.number,),
                // add some space between textfield
                SizedBox(height: 25),
                // set elevated button
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    // for Addition
                    ElevatedButton(
                        onPressed: () =>_calculate('+'),
                    child: Text('+'),
                    ),

                    // for Subtraction

                    ElevatedButton(
                      onPressed: () =>_calculate('-'),
                      child: Text('-'),
                    ),

                    // for multiplication
                    ElevatedButton(
                      onPressed: () =>_calculate('*'),
                      child: Text('*'),
                    ),
                    // for division
                    ElevatedButton(
                      onPressed: () =>_calculate('/'),
                      child: Text('/'),
                    ),

                  ],
                ),

                SizedBox(height:25),

               // manage text widget for showing  result
               Text(
                 result==null?
                   'Result show here  ':'Result: $result',

                   //manage font sytle
               style: TextStyle(
                fontSize: 15,
                fontWeight: FontWeight.normal,
                color: Colors.purple),

               ),

    SizedBox(height: 25),

    // create clear button for clear Textfield
    ElevatedButton(
        onPressed: _clearFields,
        child: Text('clear')

    ),
    ],
          ),
      ),
    );
  }
}




